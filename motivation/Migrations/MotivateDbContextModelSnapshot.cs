// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Motivation.Data;

#nullable disable

namespace motivation.Migrations
{
    [DbContext(typeof(MotivateDbContext))]
    partial class MotivateDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Motivation.Model.Emotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("emotionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("emotions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            name = "happy"
                        },
                        new
                        {
                            Id = 2,
                            name = "sad"
                        },
                        new
                        {
                            Id = 3,
                            name = "anxious"
                        },
                        new
                        {
                            Id = 4,
                            name = "confident"
                        },
                        new
                        {
                            Id = 5,
                            name = "stressed"
                        });
                });

            modelBuilder.Entity("Motivation.Model.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmotionId")
                        .HasColumnType("int");

                    b.Property<string>("motivation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("quoteCreated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmotionId");

                    b.ToTable("quotes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmotionId = 1,
                            motivation = "Happiness is a journey, not a destination.",
                            quoteCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            EmotionId = 2,
                            motivation = "It's okay to feel sad; tomorrow is a new day.",
                            quoteCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            EmotionId = 3,
                            motivation = "Take a deep breath; you've got this.",
                            quoteCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            EmotionId = 4,
                            motivation = "Believe in yourself, and the rest will follow.",
                            quoteCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            EmotionId = 5,
                            motivation = "Stress is just another test to show your strength.",
                            quoteCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Motivation.Model.Quote", b =>
                {
                    b.HasOne("Motivation.Model.Emotion", "emotion")
                        .WithMany()
                        .HasForeignKey("EmotionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("emotion");
                });
#pragma warning restore 612, 618
        }
    }
}
